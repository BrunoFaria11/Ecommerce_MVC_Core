@model Ecommerce_MVC_Core.ViewModel.CategoryViewModel
<style>
    input[type="file"] {
        display: none;
    }
</style>
<form id="frm" enctype="multipart/form-data">
    @await Html.PartialAsync("_ModalHeader", new ModalHeader { Heading = $"{(Model.Id <= 0 ? "" : "")} Categoria" })

    <div class="form-horizontal" style="padding:24px">

        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        @Html.HiddenFor(m => m.Id)

        <div class="form-group row">
            <label for="inputEmail3" class="col-sm-2 col-form-label">Categoria</label>
            <div class="col-sm-10">
                <input asp-for="Name" class="form-control" autofocus="" />
            </div>
        </div>
        <div class="row">
            <div class="col-3">
            </div>
            <div class="col-6">
                <div class="card-body text-center upload-image-div" id="Div_catImage" style="background-image:url(@Model.Image_Path);">
                    <div class="upload-image-gray">
                        <lebel class="btn btn-default btn-lg upload-btn">
                            <i class="fas fa-pencil-alt">
                            </i>
                        </lebel>
                        <input id="catImage" asp-for="Image_Path" name="Image_Path" type="file" class="input-type-file" />
                    </div>
                </div>
                <span id="Image_Path_Error" class=" invalid-feedback">Insira uma Imagem</span>
            </div>
        </div>

        @if (Model.Id > 0)
        {
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="Active" class="col-sm-2 col-form-label">Activar/Desativar</label>
                    </div>
                    @if (Model.Active)
                    {
                        <input type="checkbox" asp-for="Active" name="Active" checked data-bootstrap-switch data-off-color="danger" data-on-color="success" class="form-control">
                    }
                    else
                    {
                        <input type="checkbox" asp-for="Active" name="Active" data-bootstrap-switch data-off-color="danger" data-on-color="success" class="form-control">
                    }

                </div>
            </div>
        }
    </div>

    @await Html.PartialAsync("_ModalFooter", new ModalFooter { urlPOST = "", IdEntity = Model.Id.ToString(), IdForm = "frm" })

</form>


<script>

    $("input[data-bootstrap-switch]").each(function () {
        $(this).bootstrapSwitch('state', $(this).prop('checked'));
    });

   function doAjax(url, IdEntity, IdForm) {
        event.preventDefault();
        debugger;
        $.post(url, { id: IdEntity, model: $(IdForm).serializeFormJSON() }, function (htmlresponse) {
            if (htmlresponse.result != "error") {
                Toast.fire({
                    icon: 'success',
                    title: htmlresponse.result
                })

                if (htmlresponse.id != "" && htmlresponse.id != "0" && htmlresponse.id != null && htmlresponse.id != undefined) {
                    UploadFile("catImage", htmlresponse.id);
                    window.location.reload();
                }

            }
            else {
                Toast.fire({
                    icon: 'error',
                    title: htmlresponse.result
                })
            }
        });
    }

     $.validator.setDefaults({
        submitHandler: function () {
            event.preventDefault();

             const IdProduct = doAjax("/Category/AddEditCategory", "@Model.Id", "#frm");
        }
    });

    $('#frm').validate({
        rules: {
            Name: {
                required: true,
            },
          
          
        },
        messages: {
            Name: {
                required: "Insira um Nome",

            },
         
         
        },

        errorElement: 'span',
        errorPlacement: function (error, element) {
            if ("@Model.Id" <= 0) {
                if ($("#catImage").val() == "") {
                    $("#Image_Path_Error").show()
                }
            }
            error.addClass('invalid-feedback');
            element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
        }
    });

    $('.upload-btn').on('click', function (e) {
        e.preventDefault();

        var input = $(this).closest(".upload-image-div").find('.input-type-file');
        $(input).trigger('click');
    });

    $(".input-type-file").change('change', function (e) {
        e.preventDefault();

        $(this).closest('.upload-image-div').css("background-image", "url(" + URL.createObjectURL(e.target.files[0]) + ") ");
    });

    function UploadFile(inputId, IdCat) {
        debugger;
        var fileUpload = $("#" + inputId).get(0);
        var files = fileUpload.files;
        var data = new FormData();
        data.append(IdCat, files[0]);
        $.ajax({
            type: "POST",
            url: "/Category/UploadImages",
            contentType: false,
            processData: false,
            data: data,
            async: false,
            success: function (message) {
            },
            error: function () {
            },
        });
    };

</script>
